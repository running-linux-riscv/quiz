# 记录问题和 refs(作为问题的 tips)，但不可提供答案


== 补充问题

0） foo（int x， long long y）传递参数时，请列出x，y会分别使用哪几个参数寄存器？

1） stack按16bytes对齐，这样约定有什么背后考虑？

2）除了 sp 和 fp， 为什么 s0-s11 也都属于 callee 寄存器？

3）为什么 ra 被设计为 caller 寄存器？



补充材料
 https://github.com/riscv-non-isa/riscv-asm-manual/blob/master/riscv-asm.md

4) 基本指令中，很多指令都是成对出现的，有addi指令，为何没有subi指令？

5) 如何通过汇编代码，实现内存溢出效果?

6) 为什么参数小于 64 位时，要先扩展到 32 位再扩展到 64 位？如果是为了尽可能与 RV32 保持行为一致的话，在 RV64 上会不会造成性能损失？

7) 函数回调时，每次都是先 `la ra, NN(sp)` 再 `addi, sp, sp, NNN` ，能否反过来？

8) 77 页上，为什么 `ra - 4` 可以得到 PC 的值？

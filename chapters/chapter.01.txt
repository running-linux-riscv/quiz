# 记录问题和 refs(作为问题的 tips)，但不可提供答案

== 补充问题

0） 通用寄存器（X0-X31）的别名是不连续的，为什么？如临时寄存器是X5-X7, X28-X31; 被调用寄存器X8-X9，X18-X27

1）RISC-V PC（Program Counter）
  a）为什么PC没有设计成通用寄存器？

  b）如何获取PC的值

2) 两个连续的寄存器是否可以传递一个更大的值?

3) 香山处理器使用 RV64GCBK 指令集, 其中 CBK 都是扩展指令集, 这样是否会导致应用程序开发人员在设计过程考虑在对应的 RISC-V 处理器是否有对应的扩展指令集?

4) 如何通过 M/S 模式的系统寄存器得知是否支持某一扩展?

5) U 态下如何调用 M 态寄存器?

6) 为什么通用寄存器 X0 的值为常数0?

7) 什么样的行为会触发非法指令异常？

8) 进程是否可以在U模式下进行调度？

9) 32/64位系统,每个寄存器能存放多少位宽的数据,一个128位的数据,该如何存放?

docs: https://github.com/riscv-non-isa/riscv-elf-psabi-doc/blob/master/riscv-cc.adoc#integer-calling-convention

10) 以下这行代码,会用到哪些寄存器(rv64g指令集)?
  double a = 1 + 0.0d;

11) 根据所实现的扩展的不同， RISC-V CPU 所拥有的寄存器是否会有差异，具体说明。

12) 各系统寄存器的各字段全称是什么？（方便记忆）

13) 通常情况下， RISC-V 内存模式使用大端还是小端？

14) 系统寄存器各节中频繁出现的「陷入」一词具体含义。

15) 压缩指令存在的价值是什么？

16) 本书的学习目的，以及学完能实现的目标是什么？
